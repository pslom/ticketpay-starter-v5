'use client'

import { useMemo, useState } from 'react'
import Link from 'next/link'
import { Trash2, Pause, Play, Search, Bell } from 'lucide-react'
import PayAtSFMTA from '@/components/PayAtSFMTA'

type Alert = {
  id: string
  plate: string
  state: string
  channel: 'sms' | 'email'
  contact: string
  active: boolean
}

export default function ManagePage() {
  const [q, setQ] = useState('')
  // Mock data for MVP UI; replace with real data later
  const [alerts, setAlerts] = useState<Alert[]>([
    { id: '1', plate: '7ABC123', state: 'CA', channel: 'sms',  contact: '(415) 555-0123', active: true },
    { id: '2', plate: 'XYZ5678', state: 'NV', channel: 'email', contact: 'user@example.com', active: true },
  ])

  const filtered = useMemo(() =>
    alerts.filter(a =>
      a.plate.toLowerCase().includes(q.toLowerCase()) ||
      a.contact.toLowerCase().includes(q.toLowerCase())
    ), [alerts, q])

  const toggleActive = (id: string) =>
    setAlerts(prev => prev.map(a => a.id === id ? { ...a, active: !a.active } : a))

  const removeAlert = (id: string) => {
    if (confirm('Remove this alert?')) setAlerts(prev => prev.filter(a => a.id !== id))
  }

  return (
    <main className="px-4">
      <section className="mx-auto max-w-5xl pt-8 sm:pt-12">
        <h1 className="text-3xl sm:text-4xl font-extrabold">Manage alerts</h1>
        <p className="mt-2 text-gray-600">Add, pause, or remove your alert subscriptions.</p>
      </section>

      <section className="mx-auto max-w-5xl py-8">
        <div className="card-agency">
          <div className="flex flex-col sm:flex-row gap-4 items-center mb-6">
            <div className="relative w-full sm:flex-1">
              <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
              <input
                value={q}
                onChange={(e) => setQ(e.target.value)}
                placeholder="Search plates or contacts…"
                className="w-full pl-10 pr-4 py-3 bg-gray-50 border-2 border-gray-200 rounded-xl outline-none focus:border-emerald-500 focus:bg-white"
              />
            </div>
            <Link href="/" className="btn-primary">Add a plate</Link>
          </div>

          {filtered.length === 0 ? (
            <div className="text-center py-10">
              <p className="text-gray-500 mb-4">No alerts yet.</p>
              <Link href="/" className="btn-primary">Add your first plate</Link>
            </div>
          ) : (
            <ul className="space-y-3">
              {filtered.map(a => (
                <li
                  key={a.id}
                  className="rounded-2xl border border-gray-200 bg-white p-4 sm:p-5 flex items-center justify-between"
                >
                  <div>
                    <div className="font-semibold tracking-wide">
                      {a.state}&nbsp;{a.plate}
                      {a.active ? (
                        <span className="ml-2 text-xs inline-flex items-center rounded-full bg-emerald-50 px-2 py-0.5 text-emerald-700">Active</span>
                      ) : (
                        <span className="ml-2 text-xs inline-flex items-center rounded-full bg-red-50 px-2 py-0.5 text-red-600">Inactive</span>
                      )}
                    </div>
                    <div className="text-sm text-gray-600 mt-1">
                      {a.channel === 'sms' ? 'SMS' : 'Email'} · {a.contact}
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <a
                      href="https://wmq.etimspayments.com/pbw/include/sanfrancisco/input.jsp"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="btn-primary"
                    >
                      Pay at SFMTA
                    </a>
                    <button
                      className="btn-secondary"
                      onClick={() => toggleActive(a.id)}
                      aria-label={a.active ? 'Pause alerts' : 'Resume alerts'}
                    >
                      {a.active ? (
                        <><Pause className="w-4 h-4 mr-1" /> Pause</>
                      ) : (
                        <><Play className="w-4 h-4 mr-1" /> Resume</>
                      )}
                    </button>
                    <button
                      className="btn-secondary !border-red-200 !text-red-600"
                      onClick={() => confirm('Delete this alert?') && removeAlert(a.id)}
                    >
                      Delete
                    </button>
                  </div>
                </li>
              ))}
            </ul>
          )}
        </div>
      </section>
      <footer className="mt-10 flex items-center justify-between text-sm text-gray-500">
        <span>© {new Date().getFullYear()} TicketPay</span>
        <div className="flex items-center gap-4">
          <a href="/privacy" className="underline decoration-dotted">Privacy</a>
          <a href="/terms" className="underline decoration-dotted">Terms</a>
          <a href="/support" className="underline decoration-dotted">Support</a>
          <span>Powered by City of SF Data</span>
        </div>
      </footer>
    </main>
  )
}
